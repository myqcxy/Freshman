/*编程实现二分查找：在下列递增有序序列上查找整数4254在数组中的位置，
注意，数组索引从0开始：

6 153 298 313 317 332 345 376 486 528 562 592 592 
737 820 1058 1151 1234 1262 1263 1302 1363 1452 
1477 1569 1606 1660 1731 1748 1847 1959 1996 2001
 2189 2192 2333 2357 2437 2536 2615 2674 2689 2716 
 2834 2854 2908 3075 3205 3229 3358 3473 3477 3504 
 3596 3600 3676 3683 3800 3859 3884 3955 3985 4055 
 4087 4099 4220 4254 4310 4415 4434 4500 4514 4522 
 4588 4598 4797 4865 4888 4904 4978*/
 #include<stdio.h> 
 #define N 80
 int binarySearch(int a[], int low,int high,int x)
 {
 	while(low <= high)
 	{
 		int mid = (low + high) / 2;
 		if(a[mid] == x) return mid;
 		else if(a[mid] > x)
 			high = mid - 1;
 		else
 			low = mid + 1;
 	}
 	return 0;
 }
 int main()
 {
 	int a[N] = {6,153,298,313,317,332,345,376,486,528,562,592,592,
737,820,1058,1151,1234,1262,1263,1302,1363,1452,
1477,1569,1606,1660,1731,1748,1847,1959,1996,2001
,2189,2192,2333,2357,2437,2536,2615,2674,2689,2716,
2834,2854,2908,3075,3205,3229,3358,3473,3477,3504
,3596,3600,3676,3683,3800,3859,3884,3955,3985,4055
,4087,4099,4220,4254,4310,4415,4434,4500,4514,4522
,4588,4598,4797,4865,4888,4904,4978};
	
 	if(binarySearch(a, 0,N - 1,4254))
 		printf("%d\n",binarySearch(a, 0,N - 1,4254));
 	else
 		printf("不存在此数！\n");
 	
 	return 0;
 }
